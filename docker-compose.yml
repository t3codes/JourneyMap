version: '3.8'

services:
  # Banco de dados PostgreSQL
  database:
    image: postgres:15
    container_name: journeymap_db
    env_file:
      - .env  # Carrega as variáveis do arquivo .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - journeymap_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Node.js + Express + Sequelize
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: journeymap_backend
    env_file:
      - .env  # Carrega as variáveis do arquivo .env
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}  # Mesma variável usada pelo banco
      DB_USER: ${DB_USER}  # Mesma variável usada pelo banco
      DB_PASSWORD: ${DB_PASSWORD}  # Mesma variável usada pelo banco
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT}
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - journeymap_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: journey_frontend
    env_file:
      - .env  # Carrega as variáveis do arquivo .env
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "5173:5173"
    # depends_on:
    #   backend:
    #     condition: service_healthy
    networks:
      - journeymap_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  journeymap_network:
    driver: bridge